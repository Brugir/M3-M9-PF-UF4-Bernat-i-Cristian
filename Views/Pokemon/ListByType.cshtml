@model List<PokeDexWeb.Models.PokemonApiModel>
@{
    ViewBag.Title = "Llista de Pokémons per tipus";
}
<h2>Pokémons del tipus seleccionat</h2>
@if (Model != null && Model.Count > 0)
{
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
    }

    <div style="display: flex; flex-wrap: wrap; gap: 20px;">
        @foreach (var pokemon in Model)
        {
            <div style="border: 1px solid #ccc; padding: 10px; width: 180px; text-align: center; background: #f9f9f9; border-radius: 8px;">
                <img src="@pokemon.SpriteUrl" alt="@pokemon.Name" style="width: 100px; height: 100px;" />
                <h4>@pokemon.Name.ToUpper()</h4>
                <div>
                    Tipus:
                    @if (pokemon.Types != null && pokemon.Types.Any())
{
    foreach (var type in pokemon.Types)
    {
        <span style="background: #eee; border-radius: 4px; padding: 2px 6px; margin: 2px;">@type</span>
    }
}
else
{
    <span style="color: #888; font-style: italic;">Sense tipus disponibles</span>
}
                </div>
                <button onclick="addFavorite(this)" data-name="@pokemon.Name" data-img="@pokemon.SpriteUrl">Afegir a favorits</button>
                <button onclick="openPokedexModal('@pokemon.Name')" style="margin-left:8px;background:#3498db;color:#fff;border:none;padding:5px 10px;border-radius:4px;">Detall</button>
            </div>
        }
    </div>
}
else
{
    <div>No s'han trobat pokémons d'aquest tipus.</div>
}
@section Scripts {
    <script>
        function getAntiForgeryToken() {
            return document.querySelector('input[name="__RequestVerificationToken"]').value;
        }
        function addFavorite(btn) {
    const name = btn.getAttribute('data-name');
    const imageUrl = btn.getAttribute('data-img');
    console.log('name:', name, 'imageUrl:', imageUrl);
            fetch('/Pokemon/AddFavorite', {
                method: 'POST',
                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
                body: `name=${encodeURIComponent(name)}&imageUrl=${encodeURIComponent(imageUrl)}&__RequestVerificationToken=${getAntiForgeryToken()}`
            })
            .then(async res => {
                let msg = '';
                try {
                    const data = await res.json();
                    msg = data.message || (res.ok ? 'Afegit!' : 'Error');
                    console.log('Resposta backend:', data);
                } catch(e) {
                    msg = res.ok ? 'Afegit!' : 'Error desconegut';
                    console.log('Resposta no JSON', e);
                }
                alert(msg);
            });
        }
    </script>
}
